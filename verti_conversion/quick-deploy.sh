#!/bin/bash

# =============================================================================
# –•–£–¢–ö–Ü –î–≠–ü–õ–û–ô–ú–≠–ù–¢ –ö–û–î–£ –§–£–ù–ö–¶–´–Ü
# =============================================================================

# –ê–¥–∫–ª—é—á–∞–µ–º pager –¥–ª—è AWS CLI
export AWS_PAGER=""

# –ü–∞—Ä–∞–º–µ—Ç—Ä –∞—Å—è—Ä–æ–¥–¥–∑—è (dev –∞–±–æ prod)
ENVIRONMENT=${1:-dev}

# –ü—Ä–∞–≤—è—Ä–∞–µ–º –¥–∞–ø—É—à—á–∞–ª—å–Ω—ã—è –∑–Ω–∞—á—ç–Ω–Ω—ñ
if [[ "$ENVIRONMENT" != "dev" && "$ENVIRONMENT" != "prod" ]]; then
    echo "‚ùå –ü–∞–º—ã–ª–∫–∞: ENVIRONMENT –ø–∞–≤—ñ–Ω–µ–Ω –±—ã—Ü—å 'dev' –∞–±–æ 'prod'"
    echo "–í—ã–∫–∞—Ä—ã—Å—Ç–∞–Ω–Ω–µ: $0 [dev|prod]"
    echo "–ü–∞ –∑–º–∞—û—á–∞–Ω–Ω—ñ: dev"
    exit 1
fi

# –ù–∞–∑–≤–∞ —Å—Ç—ç–∫–∞ –∑ —Å—É—Ñ—ñ–∫—Å–∞–º –∞—Å—è—Ä–æ–¥–¥–∑—è
STACK_NAME="verti-converter-${ENVIRONMENT}"
REGION="eu-central-1"
ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)

# ECR —Ä—ç–ø–∞–∑—ñ—Ç–æ—Ä—ã–π –∑ —Å—É—Ñ—ñ–∫—Å–∞–º –∞—Å—è—Ä–æ–¥–¥–∑—è
ECR_REPOSITORY_NAME="instytutbelmovy-verti-converter-${ENVIRONMENT}"
ECR_URI="${ACCOUNT_ID}.dkr.ecr.${REGION}.amazonaws.com/${ECR_REPOSITORY_NAME}"

# –ù–∞–∑–≤–∞ Lambda —Ñ—É–Ω–∫—Ü—ã—ñ
FUNCTION_NAME="${STACK_NAME}-function"

# =============================================================================
# –°–ö–†–´–ü–¢ –•–£–¢–ö–ê–ì–ê –î–≠–ü–õ–û–ô–ú–≠–ù–¢–£
# =============================================================================

echo "‚ö° –•—É—Ç–∫—ñ –¥—ç–ø–ª–æ–π–º—ç–Ω—Ç –∫–æ–¥—É –¥–ª—è –∞—Å—è—Ä–æ–¥–¥–∑—è: ${ENVIRONMENT}"
echo "üì¶ –°—Ç—ç–∫: ${STACK_NAME}"
echo "üìÅ ECR Repository: ${ECR_REPOSITORY_NAME}"
echo "üîß Lambda Function: ${FUNCTION_NAME}"
echo ""

# –ü—Ä–∞–≤—è—Ä–∞–µ–º —Ü—ñ —ñ—Å–Ω—É–µ Lambda —Ñ—É–Ω–∫—Ü—ã—è
echo "–ü—Ä–∞–≤—è—Ä–∞–µ–º —ñ—Å–Ω–∞–≤–∞–Ω–Ω–µ Lambda —Ñ—É–Ω–∫—Ü—ã—ñ..."
if ! aws lambda get-function --function-name ${FUNCTION_NAME} --region ${REGION} >/dev/null 2>&1; then
    echo "‚ùå Lambda —Ñ—É–Ω–∫—Ü—ã—è ${FUNCTION_NAME} –Ω–µ —ñ—Å–Ω—É–µ"
    echo "–í—ã–∫–∞—Ä—ã—Å—Ç–æ—û–≤–∞–π—Ü–µ –ø–æ—û–Ω—ã –¥—ç–ø–ª–æ–π–º—ç–Ω—Ç: ./verti_conversion/deploy-cloudformation.sh ${ENVIRONMENT}"
    exit 1
fi
echo "‚úÖ Lambda —Ñ—É–Ω–∫—Ü—ã—è —ñ—Å–Ω—É–µ"

# –ê—Ç—Ä—ã–º–ª—ñ–≤–∞–µ–º git —ñ–Ω—Ñ–∞—Ä–º–∞—Ü—ã—é
echo "–ê—Ç—Ä—ã–º–ª—ñ–≤–∞–µ–º git —ñ–Ω—Ñ–∞—Ä–º–∞—Ü—ã—é..."
GIT_COMMIT_HASH=$(git rev-parse HEAD 2>/dev/null || echo "unknown")
GIT_COMMIT_DATE=$(git log -1 --format=%cd --date=iso 2>/dev/null || echo "unknown")
GIT_BRANCH=$(git rev-parse --abbrev-ref HEAD 2>/dev/null || echo "unknown")

echo "Git —Ö—ç—à: ${GIT_COMMIT_HASH}"
echo "Git –¥–∞—Ç–∞: ${GIT_COMMIT_DATE}"
echo "Git –≥–∞–ª—ñ–Ω–∞: ${GIT_BRANCH}"

# –ë—É–¥—É–µ–º Docker image –∑ git —ñ–Ω—Ñ–∞—Ä–º–∞—Ü—ã—è–π
echo "–ë—É–¥—É–µ–º Docker image..."
if ! docker build \
    --platform linux/amd64 \
    --provenance=false \
    --build-arg GIT_COMMIT_HASH="${GIT_COMMIT_HASH}" \
    --build-arg GIT_COMMIT_DATE="${GIT_COMMIT_DATE}" \
    --build-arg GIT_BRANCH="${GIT_BRANCH}" \
    -t ${STACK_NAME} \
    -f verti_conversion/Dockerfile .; then
    echo "‚ùå –ü–∞–º—ã–ª–∫–∞ –ø—Ä—ã –∑–±–æ—Ä—Ü—ã Docker image. –°–ø—ã–Ω—è–µ–º –≤—ã–∫–∞–Ω–∞–Ω–Ω–µ."
    exit 1
fi
echo "‚úÖ Docker image –ø–∞—Å–ø—è—Ö–æ–≤–∞ –ø–∞–±—É–¥–∞–≤–∞–Ω—ã"

# –ê—û—Ç–∞—Ä—ã–∑—É–µ–º—Å—è —û ECR
echo "–ê—û—Ç–∞—Ä—ã–∑—É–µ–º—Å—è —û ECR..."
if ! aws ecr get-login-password --region ${REGION} | docker login --username AWS --password-stdin ${ECR_URI}; then
    echo "‚ùå –ü–∞–º—ã–ª–∫–∞ –∞—û—Ç–∞—Ä—ã–∑–∞—Ü—ã—ñ —û ECR. –°–ø—ã–Ω—è–µ–º –≤—ã–∫–∞–Ω–∞–Ω–Ω–µ."
    exit 1
fi

# –¢—ç–≥–∞–≤–∞–µ–º —ñ –ø—É—à–∞–µ–º image
echo "–ü—É—à–∞–µ–º Docker image —û ECR..."
docker tag ${STACK_NAME}:latest ${ECR_URI}:latest
if ! docker push ${ECR_URI}:latest; then
    echo "‚ùå –ü–∞–º—ã–ª–∫–∞ –ø—Ä—ã –ø—É—à–∞–≤–∞–Ω–Ω—ñ Docker image. –°–ø—ã–Ω—è–µ–º –≤—ã–∫–∞–Ω–∞–Ω–Ω–µ."
    exit 1
fi
echo "‚úÖ Docker image –ø–∞—Å–ø—è—Ö–æ–≤–∞ –∑–∞–ø—É—à–∞–Ω —É ECR"

# –ê–±–Ω–∞—û–ª—è–µ–º Lambda —Ñ—É–Ω–∫—Ü—ã—é
echo "–ê–±–Ω–∞—û–ª—è–µ–º Lambda —Ñ—É–Ω–∫—Ü—ã—é..."
if ! aws lambda update-function-code \
    --function-name ${FUNCTION_NAME} \
    --image-uri ${ECR_URI}:latest \
    --region ${REGION}; then
    echo "‚ùå –ü–∞–º—ã–ª–∫–∞ –ø—Ä—ã –∞–±–Ω–∞—û–ª–µ–Ω–Ω—ñ Lambda —Ñ—É–Ω–∫—Ü—ã—ñ. –°–ø—ã–Ω—è–µ–º –≤—ã–∫–∞–Ω–∞–Ω–Ω–µ."
    exit 1
fi
echo "‚úÖ Lambda —Ñ—É–Ω–∫—Ü—ã—è –ø–∞—Å–ø—è—Ö–æ–≤–∞ –∞–±–Ω–æ—û–ª–µ–Ω–∞"

# –ß–∞–∫–∞–µ–º –∑–∞–≤–µ—Ä—à—ç–Ω–Ω—è –∞–±–Ω–∞—û–ª–µ–Ω–Ω—è
echo "–ß–∞–∫–∞–µ–º –∑–∞–≤–µ—Ä—à—ç–Ω–Ω—è –∞–±–Ω–∞—û–ª–µ–Ω–Ω—è..."
aws lambda wait function-updated --function-name ${FUNCTION_NAME} --region ${REGION}

if [ $? -eq 0 ]; then
    echo "‚úÖ –•—É—Ç–∫—ñ –¥—ç–ø–ª–æ–π–º—ç–Ω—Ç –∑–∞–≤–µ—Ä—à–∞–Ω—ã –ø–∞—Å–ø—è—Ö–æ–≤–∞!"
    
    # –í—ã–≤–æ–¥–∑—ñ–º —ñ–Ω—Ñ–∞—Ä–º–∞—Ü—ã—é –ø—Ä–∞ —Ñ—É–Ω–∫—Ü—ã—é
    echo "=== –Ü–ù–§–ê–†–ú–ê–¶–´–Ø –ü–†–ê –§–£–ù–ö–¶–´–Æ ==="
    aws lambda get-function --function-name ${FUNCTION_NAME} --region ${REGION} \
        --query 'Configuration.[FunctionName,Runtime,Timeout,MemorySize,LastModified]' \
        --output table
else
    echo "‚ùå –ü–∞–º—ã–ª–∫–∞ –ø—Ä—ã –∞–±–Ω–∞—û–ª–µ–Ω–Ω—ñ —Ñ—É–Ω–∫—Ü—ã—ñ"
fi 