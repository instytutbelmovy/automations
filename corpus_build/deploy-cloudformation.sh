#!/bin/bash

# =============================================================================
# –ü–û–é–ù–´ –î–≠–ü–õ–û–ô–ú–≠–ù–¢ –ó CLOUDFORMATION
# =============================================================================

# –ê–¥–∫–ª—é—á–∞–µ–º pager –¥–ª—è AWS CLI
export AWS_PAGER=""

# –ü–∞—Ä–∞–º–µ—Ç—Ä –∞—Å—è—Ä–æ–¥–¥–∑—è (dev –∞–±–æ prod)
ENVIRONMENT=${1:-dev}

# –ü—Ä–∞–≤—è—Ä–∞–µ–º –¥–∞–ø—É—à—á–∞–ª—å–Ω—ã—è –∑–Ω–∞—á—ç–Ω—å–Ω—ñ
if [[ "$ENVIRONMENT" != "dev" && "$ENVIRONMENT" != "prod" ]]; then
    echo "‚ùå –ü–∞–º—ã–ª–∫–∞: ENVIRONMENT –ø–∞–≤—ñ–Ω–µ–Ω –±—ã—Ü—å 'dev' –∞–±–æ 'prod'"
    echo "–í—ã–∫–∞—Ä—ã—Å—Ç–∞–Ω—å–Ω–µ: $0 [dev|prod]"
    echo "–ü–∞ –∑–º–æ—û—á–∞–Ω—å–Ω—ñ: dev"
    exit 1
fi

# –ù–∞–∑–≤–∞ —Å—Ç—ç–∫–∞ –∑ —Å—É—Ñ—ñ–∫—Å–∞–º –∞—Å—è—Ä–æ–¥–¥–∑—è
STACK_NAME="corpus-build-${ENVIRONMENT}"
REGION="eu-central-1"
ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
ECR_REPOSITORY_NAME="ibm-corpus-build-${ENVIRONMENT}"
ECR_URI="${ACCOUNT_ID}.dkr.ecr.${REGION}.amazonaws.com/${ECR_REPOSITORY_NAME}"

# S3 buckets
if [ "$ENVIRONMENT" = "dev" ]; then
    INPUT_BUCKET="ibm-vert-dev"
else
    INPUT_BUCKET="ibm-vert"
fi

echo "üöÄ –ü–æ—û–Ω—ã –¥—ç–ø–ª–æ–π–º—ç–Ω—Ç –¥–ª—è –∞—Å—è—Ä–æ–¥–¥–∑—è: ${ENVIRONMENT}"
echo "üì¶ –°—Ç—ç–∫: ${STACK_NAME}"
echo "üèóÔ∏è ECR Repository: ${ECR_REPOSITORY_NAME}"
echo "üìÅ Input Bucket: ${INPUT_BUCKET}"
echo ""

# –ü—Ä–∞–≤–µ—Ä—ã—Ü—å —Ü—ñ —ñ—Å–Ω—É–µ ECR repository
echo "–ü—Ä–∞–≤—è—Ä–∞–µ–º ECR repository..."
if ! aws ecr describe-repositories --repository-names ${ECR_REPOSITORY_NAME} --region ${REGION} >/dev/null 2>&1; then
    echo "‚ùå ECR repository –Ω–µ —ñ—Å–Ω—É–µ. –°—Ç–≤–∞—Ä–∞–µ–º..."
    if ! aws ecr create-repository --repository-name ${ECR_REPOSITORY_NAME} --region ${REGION}; then
        echo "‚ùå –ü–∞–º—ã–ª–∫–∞ –ø—Ä—ã —Å—Ç–≤–∞—Ä—ç–Ω—å–Ω—ñ ECR repository. –°–ø—ã–Ω—è–µ–º –≤—ã–∫–∞–Ω–∞–Ω—å–Ω–µ."
        exit 1
    fi
    echo "‚úÖ ECR repository —Å—Ç–≤–æ—Ä–∞–Ω—ã"
    # –ü–∞—û–∑–∞ –∫–∞–± –ø–µ—Ä–∞–∫–∞–Ω–∞—Ü—Ü–∞ —à—Ç–æ repository —Ü–∞–ª–∫–∞–º —Å—Ç–≤–æ—Ä–∞–Ω—ã
    sleep 5
else
    echo "‚úÖ ECR repository —É–∂–æ —ñ—Å–Ω—É–µ"
fi

# –°–∞–±—Ä–∞—Ü—å Docker image
echo "üèóÔ∏è –ó–±–æ—Ä–∫–∞ Docker image..."
if ! docker build \
    --platform linux/amd64 \
    --provenance=false \
    -t ${STACK_NAME} \
    -f corpus_build/Dockerfile .; then
    echo "‚ùå –ü–∞–º—ã–ª–∫–∞ –ø—Ä—ã –∑–±–æ—Ä—Ü—ã Docker image. –°–ø—ã–Ω—è–µ–º –≤—ã–∫–∞–Ω–∞–Ω—å–Ω–µ."
    exit 1
fi

# –ê—û—Ç–∞—Ä—ã–∑–∞–≤–∞—Ü—Ü–∞ —û ECR
echo "üîê –ê—û—Ç–∞—Ä—ã–∑–∞—Ü—ã—è —û ECR..."
aws ecr get-login-password --region ${REGION} | docker login --username AWS --password-stdin ${ACCOUNT_ID}.dkr.ecr.${REGION}.amazonaws.com

# –¢—ç–≥–Ω—É—Ü—å —ñ –∑–∞–ø—É—à—ã—Ü—å image
echo "üì§ –ü—É—à–∞–≤–∞–Ω–Ω–µ Docker image..."
docker tag ${STACK_NAME}:latest ${ECR_URI}:latest
if ! docker push ${ECR_URI}:latest; then
    echo "‚ùå –ü–∞–º—ã–ª–∫–∞ –ø—Ä—ã –≤—ã–ø—Ö–∞–Ω—å–Ω—ñ Docker image. –°–ø—ã–Ω—è–µ–º –≤—ã–∫–∞–Ω–∞–Ω—å–Ω–µ."
    exit 1
fi

# –ü—Ä–∞–≤–µ—Ä—ã—Ü—å —Ü—ñ image –ø–∞—Å—å–ø—è—Ö–æ–≤–∞ –∑–∞–ø—Ö–∞–Ω—ã
echo "–ü—Ä–∞–≤—è—Ä–∞–µ–º —Ü—ñ image –∑–∞–ø—Ö–∞–Ω—ã..."
if ! aws ecr describe-images --repository-name ${ECR_REPOSITORY_NAME} --image-ids imageTag=latest --region ${REGION} >/dev/null 2>&1; then
    echo "‚ùå Docker image –Ω—è –∑–Ω–æ–π–¥–∑–µ–Ω—ã —û ECR. –°–ø—ã–Ω—è–µ–º –≤—ã–∫–∞–Ω–∞–Ω—å–Ω–µ."
    exit 1
fi
echo "‚úÖ Docker image –ø–∞—Å—å–ø—è—Ö–æ–≤–∞ –∑–∞–ø—Ö–∞–Ω—ã —û ECR"

# –ü—Ä–∞–≤–µ—Ä—ã—Ü—å —Ü—ñ —ñ—Å–Ω—É–µ CloudFormation —Å—Ç—ç–∫
echo "–ü—Ä–∞–≤—è—Ä–∞–µ–º CloudFormation —Å—Ç—ç–∫..."
if aws cloudformation describe-stacks --stack-name ${STACK_NAME} --region ${REGION} >/dev/null 2>&1; then
    echo "üìù –°—Ç—ç–∫ —ñ—Å–Ω—É–µ, –∞–±–Ω–∞—û–ª—è–µ–º..."
    OPERATION="update-stack"
else
    echo "üÜï –°—Ç—ç–∫ –Ω–µ —ñ—Å–Ω—É–µ, —Å—Ç–≤–∞—Ä–∞–µ–º..."
    OPERATION="create-stack"
fi

# –ó–∞–ø—É—Å–∫–∞–µ–º CloudFormation
echo "–ó–∞–ø—É—Å–∫–∞–µ–º CloudFormation ${OPERATION}..."
if ! aws cloudformation ${OPERATION} \
    --stack-name ${STACK_NAME} \
    --template-body file://corpus_build/template.yaml \
    --parameters \
        ParameterKey=Environment,ParameterValue=${ENVIRONMENT} \
        ParameterKey=InputBucket,ParameterValue=${INPUT_BUCKET} \
    --capabilities CAPABILITY_NAMED_IAM \
    --region ${REGION}; then
    
    if [ "$OPERATION" = "update-stack" ]; then
        echo "‚ùå –ü–∞–º—ã–ª–∫–∞ –ø—Ä—ã –∞–±–Ω–∞—û–ª–µ–Ω—å–Ω—ñ —Å—Ç—ç–∫–∞"
    else
        echo "‚ùå –ü–∞–º—ã–ª–∫–∞ –ø—Ä—ã —Å—Ç–≤–∞—Ä—ç–Ω—å–Ω—ñ —Å—Ç—ç–∫–∞"
    fi

    aws cloudformation describe-stack-events --stack-name ${STACK_NAME} \
     --region ${REGION} --query \
     'StackEvents[?ResourceStatus==`CREATE_FAILED` || ResourceStatus==`ROLLBACK_COMPLETE`].[LogicalResourceId,ResourceType,ResourceStatus,ResourceStatusReason]' \
     --output table

    exit 1
fi

# –ß–∞–∫–∞–µ–º –∑–∞–≤–µ—Ä—à—ç–Ω—å–Ω—è –∞–ø–µ—Ä–∞—Ü—ã—ñ
echo "–ß–∞–∫–∞–µ–º –∑–∞–≤–µ—Ä—à—ç–Ω—å–Ω—è CloudFormation –∞–ø–µ—Ä–∞—Ü—ã—ñ..."
if [ "$OPERATION" = "create-stack" ]; then
    aws cloudformation wait stack-create-complete --stack-name ${STACK_NAME} --region ${REGION}
else
    aws cloudformation wait stack-update-complete --stack-name ${STACK_NAME} --region ${REGION}
fi

if [ $? -eq 0 ]; then
    echo "‚úÖ –†–∞–∑–≥–æ—Ä—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–∞–Ω–∞—è –ø–∞—Å—å–ø—è—Ö–æ–≤–∞!"
    
    # –í—ã–≤–æ–¥–∑—ñ–º —ñ–Ω—Ñ–∞—Ä–º–∞—Ü—ã—é –ø—Ä–∞ —Å—Ç—ç–∫
    echo "=== –Ü–ù–§–ê–†–ú–ê–¶–´–Ø –ü–†–ê –°–¢–≠–ö ==="
    aws cloudformation describe-stacks \
        --stack-name ${STACK_NAME} \
        --region ${REGION} \
        --query 'Stacks[0].[StackName,StackStatus,CreationTime]' \
        --output table
    
    # –í—ã–≤–æ–¥–∑—ñ–º Outputs
    echo ""
    echo "=== OUTPUTS ==="
    aws cloudformation describe-stacks \
        --stack-name ${STACK_NAME} \
        --region ${REGION} \
        --query 'Stacks[0].Outputs' \
        --output table
    
    echo ""
    echo "üìã –Ü–Ω—Å—Ç—Ä—É–∫—Ü—ã—ñ:"
    echo "1. Lambda —Ñ—É–Ω–∫—Ü—ã—è: corpus-build-${ENVIRONMENT}-function"
    echo "2. CodeBuild –ø—Ä–∞–µ–∫—Ç: corpus-build-${ENVIRONMENT}"
    echo "3. ECR Repository: ${ECR_REPOSITORY_NAME}"
    echo "4. CloudWatch Logs: /aws/lambda/corpus-build-${ENVIRONMENT}-function"
    echo "5. EventBridge Rule: corpus-build-trigger-${ENVIRONMENT}"
    
else
    echo "‚ùå –ü–∞–º—ã–ª–∫–∞ –ø—Ä—ã —Ä–∞–∑–≥–æ—Ä—Ç—Ü—ã —Å—Ç—ç–∫–∞"
    aws cloudformation describe-stack-events --stack-name ${STACK_NAME} \
     --region ${REGION} --query \
     'StackEvents[?ResourceStatus==`CREATE_FAILED` || ResourceStatus==`ROLLBACK_COMPLETE`].[LogicalResourceId,ResourceType,ResourceStatus,ResourceStatusReason]' \
     --output table
fi 